openapi: "3.0.0"
info:
  description: "TThis is RubixT swagger"
  version: "1.0.0"
  title: "RubixT"
servers:
  - url: http://localhost:3000/api
paths:
  /auth/signup:
    post:
      tags:
      - "Auth Service"
      summary: "Register"
      description: ""
      requestBody:
        description: "Register"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterInput"
      responses:
        "201":
          description: "Success Response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  token:
                    type: "string"
        "400":
          description: "Invalid input"
  /auth/signin:
    post:
      tags:
      - "Auth Service"
      summary: "Login"
      description: ""
      requestBody:
        description: "Register"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required: [email, password]
      responses:
        "201":
          description: "Success Response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  token:
                    type: "string"
        "400":
          description: "Invalid input"
  /auth/verify:
    get:
      tags:
      - "Auth Service"
      summary: "Verfiy Email"
      description: "Verfiy Email"
      parameters:
      - name: "email"
        in: "query"
        description: "Email to be verified"
        required: true
        schema:
            type: string
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      valid:
                        type: "boolean"
  /profile:
    get:
      tags:
      - "Profile"
      summary: "Profile Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    $ref: "#/components/schemas/Profile"
        "400":
          description: "Invalid tag value"
    put:
      tags:
      - "Profile"
      summary: "Update Profile"
      description: ""
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                phone:
                  type: string
      responses:
        "200":
          description: "Success Response"
        "400":
          description: "Invalid input"
  /profile/address:
    get:
      tags:
      - "Profile Address"
      summary: "Get Addresses of User"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/ProfileAddress"
    post:
      tags:
      - "Profile Address"
      summary: "Create Profile Address"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  type: string
                addressLine1:
                  type: string
                addressLine2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                country:
                  type: string
                phone:
                  type: string
              required: [title, addressLine1, addressLine2, city, state, country, phone]
      responses:
        "405":
          description: "Invalid input"
  /profile/address/{id}:
    delete:
      tags:
      - "Profile Address"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        description: "Address Id"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Operation"
        "404":
          description: "Not Found"
  /products:
    get:
      tags:
      - "Products"
      parameters:
      - name: "skip"
        in: "query"
        description: "Skip records"
        schema:
          type: "integer"
      - name: "categoryId"
        in: "query"
        description: "Skip records"
        schema:
          type: "string"
      - name: "subCategoryId"
        in: "query"
        description: "Skip records"
        schema:
          type: "string"
      - name: "text"
        in: "query"
        description: "Skip records"
        schema:
          type: "string"
      responses:
        "200":
          description: "Ssuccessful Operation"
  /products/{id}:
    get:
      tags:
      - "Products"
      parameters:
      - name: "id"
        in: "path"
        description: "Product Id"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Ssuccessful Operation"
  /cart:
    get:
      tags:
      - "Cart Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    $ref: "#/components/schemas/Cart"
  /cart/product:
    post:
      tags:
      - "Cart Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      requestBody:
        description: Add Product to cart
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                pid:
                  type: string
                quantity:
                  type: number
              required: [pid, quantity]
      responses:
        "200":
          description: "Successful Operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    $ref: "#/components/schemas/Cart"
  /cart/{cid}/product:
    put:
      tags:
        - "Cart Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      - name: "cid"
        in: "path"
        description: "Cart Id"
        required: true
        schema:
          type: "string"
      requestBody:
        description: Add Product to cart
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                pid:
                  type: string
                quantity:
                  type: number
                purchaseId:
                  type: string
              required: [pid, quantity]
      responses:
        "200":
          "description": "Successful Operation"
  /cart/{cid}/product/{pid}:
    delete:
      tags:
        - "Cart Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      - name: "cid"
        in: "path"
        description: "Cart Id"
        required: true
        schema:
          type: "string"
      - name: "pid"
        in: "path"
        description: "product Id"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Operation"
  /order:
    get:
      tags:
      - "Order Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      orders:
                        type: array
                        items:
                          $ref: "#/components/schemas/Order"
                      count: 
                        type: number
    post:
      tags:
      - "Order Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      requestBody:
        description: Add Product to cart
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                cartId:
                  type: string
                userAddressId:
                  type: string
              required: [cartId, userAddressId]
      responses:
        "200":
          description: "Successful Operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      orders:
                        type: array
                        items:
                          $ref: "#/components/schemas/Order"
                      count: 
                        type: number
  /order/{orderId}:
    get:
      tags:
      - "Order Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      - name: orderId
        in: "path"
        description: "OrderId"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    $ref: "#/components/schemas/Order"
    delete:
      tags:
      - "Order Service"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "Access Token"
        required: true
        schema:
          type: "string"
      - name: orderId
        in: "path"
        description: "OrderId"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Operation"
components:
  schemas:
    RegisterInput:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
          format: "email"
        password:
          type: "string"
        phone:
          type: "string"
      required: [firstName, lastName, email, password]
    ProfileAddress:
      type: "object"
      properties:
        id:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        phone:
          type: string
        title:
          type: string
      required: [id, addressLine1, addressLine2, city, state, country, phone, title]
    Profile:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        phone:
          type: "string"
        confirmed:
          type: "string"
        addresses:
          type: "array"
          items:
            $ref: "#/components/schemas/ProfileAddress"
    PurchaseProduct:
      type: "object"
      properties:
        pid:
          type: string
        quantity:
          type: number
        price:
          type: number
        name:
          type: string
        images:
          type: array
          items: 
            type: string
    Cart:
      type: "object"
      properties:
        id: 
          type: string
        products:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseProduct"
    Order:
      type: "object"
      properties:
        id:
          type: string
        products:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseProduct"
        cartId:
          type: string
        status:
          type: string
        userAddress:
          type: object
          $ref: "#/components/schemas/ProfileAddress"
        createdAt:
          type: string